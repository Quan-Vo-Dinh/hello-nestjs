name: 🚀 Continuous Integration

# Trigger workflow cho CI
on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  workflow_dispatch:

# Đảm bảo chỉ 1 workflow chạy cùng lúc
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: Run all tests
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: 🛒 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Setup environment for testing
        run: |
          cp .env.example .env
          echo "Environment file created:"
          cat .env

      - name: 🏗️ Build application
        run: npm run build
        env:
          DATABASE_URL: 'file:./dev.db'
          ACCESS_TOKEN_SECRET: 'test-access-token-secret'
          REFRESH_TOKEN_SECRET: 'test-refresh-token-secret'
          ACCESS_TOKEN_EXPIRATION: '15m'
          REFRESH_TOKEN_EXPIRATION: '7d'
          SECRET_API_KEY: 'test-secret-api-key'
          SALT_ROUNDS: '10'
          PORT: '3000'
          NODE_ENV: 'test'

      - name: 🧪 Run unit tests
        run: npm test
        env:
          DATABASE_URL: 'file:./dev.db'
          ACCESS_TOKEN_SECRET: 'test-access-token-secret'
          REFRESH_TOKEN_SECRET: 'test-refresh-token-secret'
          ACCESS_TOKEN_EXPIRATION: '15m'
          REFRESH_TOKEN_EXPIRATION: '7d'
          SECRET_API_KEY: 'test-secret-api-key'
          SALT_ROUNDS: '10'
          PORT: '3000'
          NODE_ENV: 'test'

      - name: 🧪 Run e2e tests
        run: npm run test:e2e
        env:
          DATABASE_URL: 'file:./dev.db'
          ACCESS_TOKEN_SECRET: 'test-access-token-secret'
          REFRESH_TOKEN_SECRET: 'test-refresh-token-secret'
          ACCESS_TOKEN_EXPIRATION: '15m'
          REFRESH_TOKEN_EXPIRATION: '7d'
          SECRET_API_KEY: 'test-secret-api-key'
          SALT_ROUNDS: '10'
          PORT: '3000'
          NODE_ENV: 'test'

      - name: 📊 Generate test coverage
        run: npm run test:cov

      - name: 📈 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
        continue-on-error: true # Không fail CI nếu upload coverage lỗi

  # Job 2: Build check
  build:
    name: 🏗️ Build Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [test] # Chỉ chạy nếu test pass
    steps:
      - name: 🛒 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Setup environment for build
        run: cp .env.example .env

      - name: 🏗️ Build for production
        run: npm run build

      - name: 🗜️ Check bundle size
        run: |
          echo "📦 Build size:"
          du -sh dist/
          ls -la dist/

  # Job 3: Basic security check
  security:
    name: 🔐 Security Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: 🛒 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: � Setup environment for security check
        run: cp .env.example .env

      - name: �🔍 Run security audit
        run: npm audit --audit-level=high
        continue-on-error: true # Không fail CI nếu có vulnerabilities nhẹ
